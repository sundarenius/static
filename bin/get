#!/bin/bash

declare -a commands=(
  nm
  bp
  os
  ip
  hw
)

case $1 in

  ${commands[0]})
    if [ -d "$HOME/n/lib/node_modules" ];
      then
        echo "~/n/lib/node_modules (if installed with curl n)"
        echo "nm = node_modules"
        echo
        ls /home/sundstrom/n/lib/node_modules
    elif [ -d "/usr/local/lib/node_modules" ];
      then
        echo "/usr/local/lib/node_modules"
        echo "nm = node_modules"
        echo
        ls /usr/local/lib/node_modules
    fi
    ;;

  ${commands[1]})
    echo "/usr/local/Cellar"
    echo "bp = brew packages"
    echo
    ls /usr/local/Cellar
    ;;

  ${commands[2]})
    if [[ "$OSTYPE" == "linux-gnu"* ]];
      then
        echo "CMD: cat /etc/os-release (linux)"
        echo
        cat /etc/os-release
    elif [[ "$OSTYPE" == "darwin"* ]];
      then
        echo "CMD: sw_vers (mac)"
        echo
        sw_vers
    fi
    ;;

  ${commands[3]})
    echo "CMD: curl ipinfo.io"
    echo "Public IP info"
    curl ipinfo.io
    if [[ "$OSTYPE" == "linux-gnu"* ]];
      then
      echo "Private IP: 'hostname -I'"
      hostname -I
    elif [[ "$OSTYPE" == "darwin"* ]];
      then
        echo "ipconfig getifaddr en0 // Private IP over wireless network (mac)"
        ipconfig getifaddr en0
        echo "ipconfig getifaddr en1 // Private IP adress to ethernet"
        ipconfig getifaddr en1
    fi
    ;;
  ${commands[4]})
    if [[ "$OSTYPE" == "linux-gnu"* ]];
      then
        echo "Harware info, hw = hardware"
        echo "CMD: lscpu (linux)"
        lscpu
    elif [[ "$OSTYPE" == "darwin"* ]];
      then
        echo "mac os"
    fi
    ;;

  *)
    echo Found no matching arguments, this is a bash script
    echo Available commands:
    echo
    printf '%s\n' "${commands[@]}"
    ;;
esac